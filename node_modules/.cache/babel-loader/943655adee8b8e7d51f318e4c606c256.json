{"ast":null,"code":"var _jsxFileName = \"/Users/pulkitmehta/Desktop/Assessment/src/Components/StudentsData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StudentCard from \"./StudentCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StudentsData() {\n  _s();\n\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [nameSearch, setNameSearch] = useState(\"\");\n  const [searchTermByTag, setSearchTermByTag] = useState(\"\");\n  useEffect(() => {\n    setLoading(true);\n    setError(\"\");\n\n    const fetchStudents = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(\"https://api.hatchways.io/assessment/students\");\n        const studentData = data.students.map(e => ({ ...e,\n          grades: e.grades.map(grade => Number(grade)),\n          tags: []\n        }));\n        setStudents(studentData);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n        setError(\"Error occured while fetching data!\");\n      }\n    };\n\n    fetchStudents();\n  }, []);\n\n  const average = arr => (arr.reduce((a, b) => a + b, 0) / arr.length).toFixed(2);\n\n  const addTagById = (id, tag) => {\n    const updatedList = students.map(student => {\n      if (student.id === id) {\n        if (student.tags.includes(tag)) {\n          return student;\n        }\n\n        return { ...student,\n          tags: [...student.tags, tag]\n        };\n      } else {\n        return student;\n      }\n    });\n    setStudents(updatedList);\n  };\n\n  const filterStudentByTags = student => student.tags.some(tag => tag.toLowerCase().includes(searchTermByTag.toLowerCase()));\n\n  const filterStudentsByName = student => student.firstName.toLowerCase().includes(nameSearch.toLowerCase());\n\n  if (error) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    style: {\n      color: \"red\"\n    },\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 21\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Loading.........\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"section-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by name\",\n        onChange: event => {\n          setNameSearch(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by tag\",\n        onChange: event => {\n          setSearchTermByTag(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), (searchTermByTag.length > 0 ? students.filter(filterStudentByTags) : students).filter(filterStudentsByName).map(_ref => {\n      let {\n        id,\n        grades,\n        ...props\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(StudentCard, { ...props,\n          gradeAvg: average(grades),\n          addTagById: addTagById,\n          grades: grades,\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            position: \"absolute\",\n            left: \"0\",\n            right: \"0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StudentsData, \"qRGb1qPFn/aMrr0LUmmyr5vga1s=\");\n\n_c = StudentsData;\nexport default StudentsData;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentsData\");","map":{"version":3,"sources":["/Users/pulkitmehta/Desktop/Assessment/src/Components/StudentsData.js"],"names":["React","useState","useEffect","axios","StudentCard","StudentsData","students","setStudents","loading","setLoading","error","setError","nameSearch","setNameSearch","searchTermByTag","setSearchTermByTag","fetchStudents","data","get","studentData","map","e","grades","grade","Number","tags","average","arr","reduce","a","b","length","toFixed","addTagById","id","tag","updatedList","student","includes","filterStudentByTags","some","toLowerCase","filterStudentsByName","firstName","color","event","target","value","filter","props","position","left","right"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport StudentCard from \"./StudentCard\";\n\nfunction StudentsData() {\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [nameSearch, setNameSearch] = useState(\"\");\n  const [searchTermByTag, setSearchTermByTag] = useState(\"\");\n\n  useEffect(() => {\n    setLoading(true);\n    setError(\"\");\n    const fetchStudents = async () => {\n      try {\n        const { data } = await axios.get(\n          \"https://api.hatchways.io/assessment/students\"\n        );\n        const studentData = data.students.map((e) => ({\n          ...e,\n          grades: e.grades.map((grade) => Number(grade)),\n          tags: [],\n        }));\n        setStudents(studentData);\n        setLoading(false);\n      } catch (e) {\n        setLoading(false);\n        setError(\"Error occured while fetching data!\");\n      }\n    };\n\n    fetchStudents();\n  }, []);\n\n  const average = (arr) =>\n    (arr.reduce((a, b) => a + b, 0) / arr.length).toFixed(2);\n\n  const addTagById = (id, tag) => {\n    const updatedList = students.map((student) => {\n      if (student.id === id) {\n        if (student.tags.includes(tag)) {\n          return student;\n        }\n        return {\n          ...student,\n          tags: [...student.tags, tag],\n        };\n      } else {\n        return student;\n      }\n    });\n    setStudents(updatedList);\n  };\n\n  const filterStudentByTags = (student) =>\n    student.tags.some((tag) =>\n      tag.toLowerCase().includes(searchTermByTag.toLowerCase())\n    );\n\n  const filterStudentsByName = (student) =>\n    student.firstName.toLowerCase().includes(nameSearch.toLowerCase());\n\n  if (error) return <h3 style={{ color: \"red\" }}>{error}</h3>;\n  if (loading) return <h3>Loading.........</h3>;\n\n  return (\n    <div className=\"section-center\">\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by name\"\n          onChange={(event) => {\n            setNameSearch(event.target.value);\n          }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Search by tag\"\n          onChange={(event) => {\n            setSearchTermByTag(event.target.value);\n          }}\n        />\n      </div>\n\n      {(searchTermByTag.length > 0\n        ? students.filter(filterStudentByTags)\n        : students\n      )\n        .filter(filterStudentsByName)\n        .map(({ id, grades, ...props }) => (\n          <div key={id}>\n            <StudentCard\n              {...props}\n              gradeAvg={average(grades)}\n              addTagById={addTagById}\n              grades={grades}\n              id={id}\n            />\n            <hr style={{ position: \"absolute\", left: \"0\", right: \"0\" }} />\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default StudentsData;\n"]},"metadata":{},"sourceType":"module"}